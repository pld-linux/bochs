--- bochs-2.3/gui/wx.cc.org	2006-12-16 03:08:18.928681500 +0100
+++ bochs-2.3/gui/wx.cc	2006-12-16 03:12:05.546844250 +0100
@@ -821,9 +821,13 @@
     case WXK_NUMPAD_UP:            bx_key = BX_KEY_KP_UP;        break;
     case WXK_NUMPAD_RIGHT:         bx_key = BX_KEY_KP_RIGHT;     break;
     case WXK_NUMPAD_DOWN:          bx_key = BX_KEY_KP_DOWN;      break;
+#if WXK_NUMPAD_PRIOR != WXK_NUMPAD_PAGEUP
     case WXK_NUMPAD_PRIOR:         bx_key = BX_KEY_KP_PAGE_UP;   break;
+#endif
     case WXK_NUMPAD_PAGEUP:        bx_key = BX_KEY_KP_PAGE_UP;   break;
+#if WXK_NUMPAD_NEXT != WXK_NUMPAD_PAGEDOWN
     case WXK_NUMPAD_NEXT:          bx_key = BX_KEY_KP_PAGE_DOWN; break;
+#endif
     case WXK_NUMPAD_PAGEDOWN:      bx_key = BX_KEY_KP_PAGE_DOWN; break;
     case WXK_NUMPAD_END:           bx_key = BX_KEY_KP_END;       break;
     case WXK_NUMPAD_BEGIN:         bx_key = BX_KEY_KP_HOME;      break;
@@ -849,7 +853,8 @@
     case 220: bx_key = BX_KEY_BACKSLASH;     break; // \|
     case 222: bx_key = BX_KEY_SINGLE_QUOTE;  break; // '"
     case 305: bx_key = BX_KEY_KP_5;          break; // keypad 5
-    case 392: bx_key = BX_KEY_KP_ADD;        break; // keypad plus
+/* same as WXK_NUMPAD_DIVIDE ?! */
+//    case 392: bx_key = BX_KEY_KP_ADD;        break; // keypad plus
 
     default:
       wxLogMessage(wxT ("Unhandled key event: %i (0x%x)"), key, key);
--- bochs-2.3/gui/wxdialog.h.org	2006-12-16 03:16:44.252262250 +0100
+++ bochs-2.3/gui/wxdialog.h	2006-12-16 03:19:08.005246250 +0100
@@ -5,6 +5,7 @@
 // wxWidgets dialogs for Bochs
 
 #include <wx/spinctrl.h>
+#include <wx/notebook.h>
 
 ////////////////////////////////////////////////////////////////////
 // text messages used in several places
--- bochs-2.3/gui/wxdialog.cc.org	2006-12-16 03:20:44.187257250 +0100
+++ bochs-2.3/gui/wxdialog.cc	2006-12-16 03:21:14.213133750 +0100
@@ -818,7 +818,7 @@
 {
   paramHash->BeginFind();
   wxNode *node;
-  while ((node = paramHash->Next()) != NULL) {
+  while ((node = (wxNode *)paramHash->Next()) != NULL) {
     // assume that no ParamStruct appears in the hash table under multiple
     // keys.  If so, we will delete it twice and corrupt memory.
     ParamStruct *pstr = (ParamStruct*) node->GetData();
@@ -1129,7 +1129,7 @@
   // loop through all the parameters
   idHash->BeginFind();
   wxNode *node;
-  while ((node = idHash->Next()) != NULL) {
+  while ((node = (wxNode *)idHash->Next()) != NULL) {
     ParamStruct *pstr = (ParamStruct*) node->GetData();
     wxLogDebug(wxT("commit changes for param %s"), pstr->param->get_name());
     int type = pstr->param->get_type();
@@ -1209,7 +1209,7 @@
 {
   idHash->BeginFind();
   wxNode *node;
-  while ((node = idHash->Next ()) != NULL) {
+  while ((node = (wxNode *)idHash->Next ()) != NULL) {
     ParamStruct *pstr = (ParamStruct*) node->GetData();
     if (pstr->param->get_type() == BXT_PARAM_BOOL)
       EnableChanged(pstr);
@@ -1410,7 +1410,7 @@
   // loop through all the parameters
   idHash->BeginFind ();
   wxNode *node;
-  while ((node = idHash->Next ()) != NULL) {
+  while ((node = (wxNode *)idHash->Next ()) != NULL) {
     ParamStruct *pstr = (ParamStruct*) node->GetData ();
     IFDBG_DLG(wxLogDebug(wxT("refresh param %s"), pstr->param->get_name()));
     int type = pstr->param->get_type ();
